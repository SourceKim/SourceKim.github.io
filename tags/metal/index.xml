<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Metal on Kim's Blog</title><link>https://www.uiimage.com/tags/metal/</link><description>Recent content in Metal on Kim's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>18666269733@163.com (Kim)</managingEditor><webMaster>18666269733@163.com (Kim)</webMaster><lastBuildDate>Tue, 09 Jun 2020 13:00:00 +0800</lastBuildDate><atom:link href="https://www.uiimage.com/tags/metal/index.xml" rel="self" type="application/rss+xml"/><item><title>Metal - 8 渲染摄像头采集的 BGRA 数据（CVMetalTextureCacheRef）</title><link>https://www.uiimage.com/post/blog/metal/metal-8-render-camera-bgra-by-texture-cache/</link><pubDate>Tue, 09 Jun 2020 13:00:00 +0800</pubDate><author>18666269733@163.com (Kim)</author><guid>https://www.uiimage.com/post/blog/metal/metal-8-render-camera-bgra-by-texture-cache/</guid><description>&lt;p>本文的目的是 &lt;strong>使用 Metal 渲染摄像头采集的 BGRA 数据&lt;/strong>，关键会使用到 &lt;code>CVMetalTextureCacheRef&lt;/code> 类，将摄像头采集到的 &lt;code>CMSampleBuffer&lt;/code> 转换成 Metal 的纹理，并渲染上屏。&lt;/p>
&lt;p>完整代码可以访问 &lt;a href="https://github.com/SourceKim/MetalTest">仓库&lt;/a> 的 &lt;code>7. 渲染摄像头采集的数据（CVMetalTextureCache）&lt;/code>。&lt;/p></description></item><item><title>Metal - 7 旋转的立方体</title><link>https://www.uiimage.com/post/blog/metal/metal-7-rotatingcube/</link><pubDate>Mon, 08 Jun 2020 23:00:00 +0800</pubDate><author>18666269733@163.com (Kim)</author><guid>https://www.uiimage.com/post/blog/metal/metal-7-rotatingcube/</guid><description>&lt;p>本文的目的是使用 Metal 实现一个 &lt;strong>旋转的立方体&lt;/strong>。&lt;/p>
&lt;p>相关知识点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用 Metal 画立方体（使用顶点索引 &lt;code>EBO&lt;/code> 实现共享顶点）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 &lt;code>MetalMatrix&lt;/code> 逐帧旋转 model 矩阵&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Metal 深度测试，使用 &lt;code>MTLDepthStencilState&lt;/code> 协议设置深度信息&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>完整代码可以访问 &lt;a href="https://github.com/SourceKim/MetalTest">仓库&lt;/a> 的 &lt;code>6. 旋转的立方体&lt;/code>。&lt;/p></description></item><item><title>Metal - 6 三维变换</title><link>https://www.uiimage.com/post/blog/metal/metal-6-three-dimentions-transformation/</link><pubDate>Sun, 07 Jun 2020 23:00:00 +0800</pubDate><author>18666269733@163.com (Kim)</author><guid>https://www.uiimage.com/post/blog/metal/metal-6-three-dimentions-transformation/</guid><description>&lt;p>本章将介绍 Metal 三维变换相关，主要是 MVP 矩阵（Model / View / Projection），最终通过不断地让 &lt;strong>摄像头围绕 2D 图片移动&lt;/strong>，实现图片旋转。&lt;/p>
&lt;p>具体代码可以访问 &lt;a href="https://github.com/SourceKim/MetalTest">仓库&lt;/a> 的 &lt;code>5. 三维变换&lt;/code>。&lt;/p>
&lt;p>另外因为 Metal 中没有 &lt;code>GLKMatrix&lt;/code> 类直接构造变换矩阵，因此使用到的是自己封装的 &lt;a href="https://github.com/SourceKim/MetalMatrix">MetalMatrix&lt;/a> 工具帮忙构建 MVP 矩阵。&lt;/p></description></item><item><title>Metal - 5 滤镜链（渲染到纹理）</title><link>https://www.uiimage.com/post/blog/metal/metal-5-filter-chain/</link><pubDate>Sat, 06 Jun 2020 23:00:00 +0800</pubDate><author>18666269733@163.com (Kim)</author><guid>https://www.uiimage.com/post/blog/metal/metal-5-filter-chain/</guid><description>&lt;p>本文要实现的效果是对一张图片同时使用灰度滤镜以及亮度滤镜，使用 &lt;strong>滤镜链&lt;/strong> 实现，最终把应用滤镜链的结果输出到 Layer 上，并且可以调节灰度和亮度程度之后实时渲染显示。&lt;/p>
&lt;p>Metal 中要实现滤镜链，需要将 &lt;strong>中间滤镜的渲染结果临时保存到一个纹理中&lt;/strong>，最后一个滤镜的渲染结果直接保存到 &lt;code>Drawable&lt;/code> 的纹理中。因此需要用到 &lt;strong>渲染到纹理&lt;/strong> 的技术。&lt;/p>
&lt;p>在本文中中间滤镜仅一个 - 灰度滤镜，最后的滤镜是亮度滤镜。&lt;/p>
&lt;p>同时因为 Metal 的 标准坐标系 &lt;code>NDC&lt;/code>（Normalized Device Coordinate）、 帧缓存坐标系 &lt;code>FrameBuffer Coordinate&lt;/code> （也叫 Viewport Coordinate）以及纹理坐标系（&lt;code>Texture Coordinate&lt;/code>）的原点不一致，还会分别对他们进行介绍和解析。&lt;/p>
&lt;p>具体代码可以访问 &lt;a href="https://github.com/SourceKim/MetalTest">仓库&lt;/a> 的 &lt;code>4. 滤镜链&lt;/code>。&lt;/p></description></item><item><title>Metal - 4 纹理采样参数</title><link>https://www.uiimage.com/post/blog/metal/metal-4-texture-sampling-params/</link><pubDate>Wed, 03 Jun 2020 23:00:00 +0800</pubDate><author>18666269733@163.com (Kim)</author><guid>https://www.uiimage.com/post/blog/metal/metal-4-texture-sampling-params/</guid><description>&lt;p>在 Metal 中进行纹理采样的时候，我们可以使用参数去控制一些特殊情况，比如：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>1、当纹理坐标超过纹理坐标的位置如何处理？&lt;/p>
&lt;ul>
&lt;li>MTLSamplerAddressModeClampToEdge&lt;/li>
&lt;li>MTLSamplerAddressModeRepeat&lt;/li>
&lt;li>MTLSamplerAddressModeMirrorRepeat&lt;/li>
&lt;li>MTLSamplerAddressModeClampToZero&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>2、使用 mipmap 提升缓存命中率的时候采用什么算法？&lt;/p>
&lt;ul>
&lt;li>MTLSamplerMipFilterNotMipmapped&lt;/li>
&lt;li>MTLSamplerMipFilterNearest&lt;/li>
&lt;li>MTLSamplerMipFilterLinear&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>通过将这些参数值设置到我们的 &lt;strong>采样器 （&lt;code>sampler&lt;/code> 或叫 &lt;code>MTLSamplerState&lt;/code>）&lt;/strong> 中，然后在 shader 中对纹理采样的时候应该即可。&lt;/p>
&lt;p>具体代码可以访问 &lt;a href="https://github.com/SourceKim/MetalTest">仓库&lt;/a> 的 &lt;code>3. 纹理采样参数详解&lt;/code>&lt;/p></description></item><item><title>Metal - 3 画一个图片</title><link>https://www.uiimage.com/post/blog/metal/metal-3-draw-a-picture/</link><pubDate>Tue, 02 Jun 2020 23:00:00 +0800</pubDate><author>18666269733@163.com (Kim)</author><guid>https://www.uiimage.com/post/blog/metal/metal-3-draw-a-picture/</guid><description>&lt;p>本文涉及到 Metal 的主要知识：&lt;/p>
&lt;ul>
&lt;li>
&lt;ol>
&lt;li>纹理加载 - 将 &lt;code>UIImage&lt;/code> 转化成 Metal 纹理 &lt;code>id&amp;lt;MTLTexture&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;ol start="2">
&lt;li>纹理上传 - 将纹理上传到 GPU（Metal 渲染管线）&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;ol start="3">
&lt;li>纹理绘制 - 使用 shader 完成纹理采样和输出到片元颜色&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;ol start="3">
&lt;li>在 Metal 中使用索引缓冲区 &lt;code>IndexBuffer&lt;/code> 绘制图元&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>具体代码可以访问 &lt;a href="https://github.com/SourceKim/MetalTest">仓库&lt;/a> 的 &lt;code>2. 画一张图片&lt;/code>。&lt;/p></description></item><item><title>Metal - 2 画一个三角形</title><link>https://www.uiimage.com/post/blog/metal/metal-2-draw-a-triangle/</link><pubDate>Fri, 29 May 2020 23:00:00 +0800</pubDate><author>18666269733@163.com (Kim)</author><guid>https://www.uiimage.com/post/blog/metal/metal-2-draw-a-triangle/</guid><description>&lt;p>本篇文章的目标是使用 Metal 渲染一个 &lt;strong>渐变色三角形&lt;/strong>。&lt;/p>
&lt;p>可以了解到 Metal 和 Render 相关 Api 的基本使用。&lt;/p>
&lt;p>具体代码可以访问 &lt;a href="https://github.com/SourceKim/MetalTest">仓库&lt;/a> 的 &lt;code>1. 三角形&lt;/code>。&lt;/p></description></item><item><title>Metal - 1 概述</title><link>https://www.uiimage.com/post/blog/metal/metal-1-base-concept/</link><pubDate>Thu, 28 May 2020 23:00:00 +0800</pubDate><author>18666269733@163.com (Kim)</author><guid>https://www.uiimage.com/post/blog/metal/metal-1-base-concept/</guid><description>&lt;p>Metal 是苹果推出专用的与 &lt;strong>GPU 沟通的框架&lt;/strong>，类似于 OpenGL ES，但是 OpenGL ES 苹果明确说明在 iOS 12 已经被弃用了，虽然现在还能使用，但是不再为其进行更新了，也指不定哪个新系统会直接不让使用了。&lt;/p>
&lt;p>因此，现在学习 Metal，对于 iOS 音视频方面开发有一定的前瞻性。&lt;/p></description></item></channel></rss>